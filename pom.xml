<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>nl.ipo.cds.ipo</groupId>
	<artifactId>assembly</artifactId>
	<packaging>jar</packaging>
	<version>2.2</version>

	<properties>
		<!-- IPO version is used to tag docker images. -->
		<cds-ipo.version>2.2</cds-ipo.version>
		<cds.version>2.2</cds.version>
		<docker.tomcat.version>1.0</docker.tomcat.version>
		<docker.base.version>1.0</docker.base.version>
	</properties>

	<scm>
		<connection>scm:svn:svn+ssh://repos.idgis.eu/cds-inspire/cds-assembly/tags/assembly-2.1</connection>
		<developerConnection>scm:svn:svn+ssh://repos.idgis.eu/cds-inspire/cds-assembly/tags/assembly-2.1</developerConnection>
	</scm>
	
	<profiles>
		<profile>
			<id>docker-build</id>
			<activation>
				<property>
					<name>docker.host</name>
				</property>
			</activation>
			<properties>
				<docker.skip-base>false</docker.skip-base>
				<docker.skip-config>false</docker.skip-config>
				<docker.skip-postgresql>false</docker.skip-postgresql>
				<docker.skip-ldap>false</docker.skip-ldap>
				<docker.skip-tomcat>false</docker.skip-tomcat>
				<docker.skip-admin>false</docker.skip-admin>
				<docker.skip-webservices>false</docker.skip-webservices>
				<docker.skip-job-executor>false</docker.skip-job-executor>
				<docker.skip-postfix>true</docker.skip-postfix>
				<docker.skip-apache>false</docker.skip-apache>
				<docker.skip-cron>false</docker.skip-cron>
			</properties>
			
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-dependency-plugin</artifactId>
						<version>2.2</version>
						
						<executions>
							<execution>
								<id>copy-wars</id>
								
								<goals><goal>copy</goal></goals>
								<phase>package</phase>
								
								<configuration>
									<artifactItems>
										<artifactItem>
											<groupId>nl.ipo.cds.ipo</groupId>
											<artifactId>ipo-admin</artifactId>
											<type>war</type>
											<destFileName>admin.war</destFileName>			
										</artifactItem>
										<artifactItem>
											<groupId>nl.ipo.cds</groupId>
											<artifactId>deegree-webservices-cds</artifactId>
											<type>war</type>
											<destFileName>deegree.war</destFileName>
										</artifactItem>
									</artifactItems>
									<outputDirectory>${project.build.directory}/webapps</outputDirectory>
									<overWriteReleases>false</overWriteReleases>
									<overWriteSnapshots>true</overWriteSnapshots>
								</configuration>
							</execution>
							
							<execution>
								<id>copy-jars</id>
								
								<goals><goal>copy</goal></goals>
								<phase>package</phase>
								
								<configuration>
									<artifactItems>
										<artifactItem>
											<groupId>nl.ipo.cds.ipo</groupId>
											<artifactId>ipo-job-executor-exec</artifactId>
											<type>jar</type>
											<destFileName>job-executor.jar</destFileName>
										</artifactItem>
									</artifactItems>
									<outputDirectory>${project.build.directory}/jars</outputDirectory>
									<overwriteReleases>false</overwriteReleases>
									<overwriteSnapshots>true</overwriteSnapshots>
								</configuration>
							</execution>
							
							<execution>
								<id>unpack-config</id>
								
								<goals><goal>unpack</goal></goals>
								<phase>package</phase>
								
								<configuration>
									<artifactItems>
										<artifactItem>
											<groupId>nl.ipo.cds</groupId>
											<artifactId>resources</artifactId>
											<classifier>prod</classifier>
											<type>jar</type>
										</artifactItem>
									</artifactItems>
									<outputDirectory>${project.build.directory}/config/configdir</outputDirectory>
									<overWriteReleases>false</overWriteReleases>
									<overWriteSnapshots>true</overWriteSnapshots>
								</configuration>
							</execution>
						</executions>
					</plugin>
				
					<plugin>
						<groupId>com.spotify</groupId>
						<artifactId>docker-maven-plugin</artifactId>
						<version>0.1.1</version>
		
						<executions>
							<!-- Build base image (cds-base): -->
							<execution>
								<id>build-cds-base</id>
								
								<goals><goal>build</goal></goals>
								<phase>package</phase>
								
								<configuration>
									<buildDirectory>${project.build.directory}/docker/cds-base</buildDirectory>
									<dockerDirectory>${basedir}/src/main/docker/cds-base</dockerDirectory>
									<dockerHost>${docker.host}</dockerHost>
									<imageName>cds-base:${docker.base.version}</imageName>
									<skipDockerBuild>${docker.skip-base}</skipDockerBuild>
								</configuration>
							</execution>

							<!-- Build config image (cds-config): -->
							<execution>
								<id>build-cds-config</id>
								
								<goals><goal>build</goal></goals>
								<phase>package</phase>
								
								<configuration>
									<buildDirectory>${project.build.directory}/docker/cds-config</buildDirectory>
									<dockerDirectory>${basedir}/src/main/docker/cds-config</dockerDirectory>
									<dockerHost>${docker.host}</dockerHost>
									<imageName>cds-config:${cds-ipo.version}</imageName>
									<skipDockerBuild>${docker.skip-config}</skipDockerBuild>
									
									<resources>
										<resource>
											<targetPath>/config</targetPath>
											<directory>${project.build.directory}/config</directory>
										</resource>
									</resources>
								</configuration>
							</execution>
							
							<!-- Build database image (cds-postgresql): -->
							<execution>
								<id>build-cds-postgresql</id>
								
								<goals><goal>build</goal></goals>
								<phase>package</phase>
																
								<configuration>
									<buildDirectory>${project.build.directory}/docker/cds-postgresql</buildDirectory>
									<dockerDirectory>${basedir}/src/main/docker/cds-postgresql</dockerDirectory>
									<dockerHost>${docker.host}</dockerHost>
									<imageName>cds-postgresql:${cds-ipo.version}</imageName>
									<skipDockerBuild>${docker.skip-postgresql}</skipDockerBuild>
									
									<resources>
										<resource>
											<targetPath>/sql</targetPath>
											<directory>${project.build.directory}/sql</directory>
											<include>*.sql</include>
										</resource>
									</resources>
								</configuration>
							</execution>
							
							<!-- Build the LDAP image (cds-ldap): -->
							<execution>
								<id>build-cds-ldap</id>
								
								<goals><goal>build</goal></goals>
								<phase>package</phase>
								
								<configuration>
									<buildDirectory>${project.build.directory}/docker/cds-ldap</buildDirectory>
									<dockerDirectory>${basedir}/src/main/docker/cds-ldap</dockerDirectory>
									<dockerHost>${docker.host}</dockerHost>
									<imageName>cds-ldap:${cds-ipo.version}</imageName>
									<skipDockerBuild>${docker.skip-ldap}</skipDockerBuild>
								</configuration>
							</execution>

							<!-- Build tomcat image (cds-tomcat): -->
							<execution>
								<id>build-cds-tomcat</id>
								
								<goals><goal>build</goal></goals>
								<phase>package</phase>
								
								<configuration>
									<buildDirectory>${project.build.directory}/docker/cds-tomcat</buildDirectory>
									<dockerDirectory>${basedir}/src/main/docker/cds-tomcat</dockerDirectory>
									<dockerHost>${docker.host}</dockerHost>
									<imageName>cds-tomcat:${docker.tomcat.version}</imageName>
									<skipDockerBuild>${docker.skip-tomcat}</skipDockerBuild>
								</configuration>
							</execution>
							
							<!--  Build admin image (cds-admin): -->
							<execution>
								<id>build-cds-admin</id>
								
								<goals><goal>build</goal></goals>
								<phase>package</phase>
								
								<configuration>
									<buildDirectory>${project.build.directory}/docker/cds-admin</buildDirectory>
									<dockerDirectory>${basedir}/src/main/docker/cds-admin</dockerDirectory>
									<dockerHost>${docker.host}</dockerHost>
									<imageName>cds-admin:${cds-ipo.version}</imageName>
									<skipDockerBuild>${docker.skip-admin}</skipDockerBuild>
									
									<resources>
										<resource>
											<targetPath>/webapps</targetPath>
											<directory>${project.build.directory}/webapps</directory>
											<include>admin.war</include>
										</resource>
									</resources>
								</configuration>
							</execution>
														
							<!-- Build webservices image (cds-webservices): -->
							<execution>
								<id>build-cds-webservices</id>
								
								<goals><goal>build</goal></goals>
								<phase>package</phase>
								
								<configuration>
									<buildDirectory>${project.build.directory}/docker/cds-webservices</buildDirectory>
									<dockerDirectory>${basedir}/src/main/docker/cds-webservices</dockerDirectory>
									<dockerHost>${docker.host}</dockerHost>
									<imageName>cds-webservices:${cds-ipo.version}</imageName>
									<skipDockerBuild>${docker.skip-webservices}</skipDockerBuild>
									
									<resources>
										<resource>
											<targetPath>/webapps</targetPath>
											<directory>${project.build.directory}/webapps</directory>
											<include>deegree.war</include>
										</resource>
									</resources>

								</configuration>
							</execution>
							
							<!-- Build job-executor (cds-job-executor) -->
							<execution>
								<id>buid-cds-job-executor</id>
								
								<goals><goal>build</goal></goals>
								<phase>package</phase>
								
								<configuration>
									<buildDirectory>${project.build.directory}/docker/cds-job-executor</buildDirectory>
									<dockerDirectory>${basedir}/src/main/docker/cds-job-executor</dockerDirectory>
									<dockerHost>${docker.host}</dockerHost>
									<imageName>cds-job-executor:${cds-ipo.version}</imageName>
									<skipDockerBuild>${docker.skip-job-executor}</skipDockerBuild>
									
									<resources>
										<resource>
											<targetPath>/jars</targetPath>
											<directory>${project.build.directory}/jars</directory>
											<include>*.jar</include>
										</resource>
									</resources>
								</configuration>
							</execution>
							
							<!-- Build postfix (cds-postfix): -->
							<execution>
								<id>build-cds-postfix</id>
								
								<goals><goal>build</goal></goals>
								<phase>package</phase>
								
								<configuration>
									<buildDirectory>${project.build.directory}/docker/cds-postfix</buildDirectory>
									<dockerDirectory>${basedir}/src/main/docker/cds-postfix</dockerDirectory>
									<dockerHost>${docker.host}</dockerHost>
									<imageName>cds-postfix:${cds-ipo.version}</imageName>
									<skipDockerBuild>${docker.skip-postfix}</skipDockerBuild>
								</configuration>
							</execution>
							
							<!-- Build apache (cds-apache): -->
							<execution>
								<id>build-cds-apache</id>
								
								<goals><goal>build</goal></goals>
								<phase>package</phase>
								
								<configuration>
									<buildDirectory>${project.build.directory}/docker/cds-apache</buildDirectory>
									<dockerDirectory>${basedir}/src/main/docker/cds-apache</dockerDirectory>
									<dockerHost>${docker.host}</dockerHost>
									<imageName>cds-apache:${cds-ipo.version}</imageName>
									<skipDockerBuild>${docker.skip-apache}</skipDockerBuild>
								</configuration>
							</execution>
							
							<!-- Build cron (cds-cron): -->
							<execution>
								<id>build-cds-cron</id>
								
								<goals><goal>build</goal></goals>
								<phase>package</phase>
								
								<configuration>
									<buildDirectory>${project.build.directory}/docker/cds-cron</buildDirectory>
									<dockerDirectory>${basedir}/src/main/docker/cds-cron</dockerDirectory>
									<dockerHost>${docker.host}</dockerHost>
									<imageName>cds-cron:${cds-ipo.version}</imageName>
									<skipDockerBuild>${docker.skip-cron}</skipDockerBuild>
								</configuration>
							</execution>
							
						</executions>
					</plugin>
				</plugins>
			</build>
			
		</profile>
	</profiles>
	<build>
		<plugins>
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>single</goal>
						</goals>
						<phase>package</phase>
					</execution>
				</executions>
				<configuration>
					<finalName>cds-${cds.version}</finalName>
					<appendAssemblyId>true</appendAssemblyId>
					<descriptors>
						<descriptor>src/main/assembly/assembly-software.xml</descriptor>
						<descriptor>src/main/assembly/assembly-config.xml</descriptor>
						<descriptor>src/main/assembly/assembly-config-tst.xml</descriptor>
						<descriptor>src/main/assembly/assembly-config-acc.xml</descriptor>
						<descriptor>src/main/assembly/assembly-config-prod.xml</descriptor>
						<descriptor>src/main/assembly/assembly-sql.xml</descriptor>
					</descriptors>
				</configuration>
			</plugin>

			<plugin>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>2.2</version>
				<executions>
					<execution>
						<id>unpack</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>unpack</goal>
						</goals>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>nl.ipo.cds.ipo</groupId>
									<artifactId>ipo-job-executor-exec</artifactId>
								</artifactItem>
								<artifactItem>
									<groupId>nl.ipo.cds</groupId>
									<artifactId>etl-proces</artifactId>
								</artifactItem>
								<artifactItem>
									<groupId>nl.ipo.cds</groupId>
									<artifactId>etl-proces</artifactId>
									<type>zip</type>
									<classifier>sql</classifier>
								</artifactItem>
								<artifactItem>
									<groupId>nl.ipo.cds</groupId>
									<artifactId>managerDB</artifactId>
									<type>zip</type>
									<classifier>sql</classifier>
								</artifactItem>
								<artifactItem>
									<groupId>nl.ipo.cds</groupId>
									<artifactId>metadataDB</artifactId>
									<type>zip</type>
									<classifier>sql</classifier>
								</artifactItem>
								<artifactItem>
									<groupId>nl.ipo.cds</groupId>
									<artifactId>theme-areamanagement</artifactId>
									<type>zip</type>
									<classifier>sql</classifier>
								</artifactItem>
								<artifactItem>
									<groupId>nl.ipo.cds.ipo</groupId>
									<artifactId>theme-buisleidingen</artifactId>
									<type>zip</type>
									<classifier>sql</classifier>
								</artifactItem>
								<artifactItem>
									<groupId>nl.ipo.cds.ipo</groupId>
									<artifactId>theme-bvb</artifactId>
									<type>zip</type>
									<classifier>sql</classifier>
								</artifactItem>
								<artifactItem>
									<groupId>nl.ipo.cds</groupId>
									<artifactId>theme-exposedelements</artifactId>
									<type>zip</type>
									<classifier>sql</classifier>
								</artifactItem>
								<artifactItem>
									<groupId>nl.ipo.cds</groupId>
									<artifactId>theme-habitat</artifactId>
									<type>zip</type>
									<classifier>sql</classifier>
								</artifactItem>
								<artifactItem>
									<groupId>nl.ipo.cds</groupId>
									<artifactId>theme-hazardarea</artifactId>
									<type>zip</type>
									<classifier>sql</classifier>
								</artifactItem>
								<artifactItem>
									<groupId>nl.ipo.cds.ipo</groupId>
									<artifactId>theme-monster</artifactId>
									<type>zip</type>
									<classifier>sql</classifier>
								</artifactItem>
								<artifactItem>
									<groupId>nl.ipo.cds.ipo</groupId>
									<artifactId>theme-monsterpunt</artifactId>
									<type>zip</type>
									<classifier>sql</classifier>
								</artifactItem>
								<artifactItem>
									<groupId>nl.ipo.cds</groupId>
									<artifactId>theme-productionfacility</artifactId>
									<type>zip</type>
									<classifier>sql</classifier>
								</artifactItem>
								<artifactItem>
									<groupId>nl.ipo.cds</groupId>
									<artifactId>theme-productioninstallation</artifactId>
									<type>zip</type>
									<classifier>sql</classifier>
								</artifactItem>
								<artifactItem>
									<groupId>nl.ipo.cds</groupId>
									<artifactId>theme-productioninstallationpart</artifactId>
									<type>zip</type>
									<classifier>sql</classifier>
								</artifactItem>
								<artifactItem>
									<groupId>nl.ipo.cds</groupId>
									<artifactId>theme-productioninstallationpart</artifactId>
									<type>zip</type>
									<classifier>sql</classifier>
								</artifactItem>
								<artifactItem>
									<groupId>nl.ipo.cds</groupId>
									<artifactId>theme-protectedsites</artifactId>
									<type>zip</type>
									<classifier>sql</classifier>
								</artifactItem>
								<artifactItem>
									<groupId>nl.ipo.cds.ipo</groupId>
									<artifactId>theme-resultaat</artifactId>
									<type>zip</type>
									<classifier>sql</classifier>
								</artifactItem>
								<artifactItem>
									<groupId>nl.ipo.cds.ipo</groupId>
									<artifactId>theme-riscisor</artifactId>
									<type>zip</type>
									<classifier>sql</classifier>
								</artifactItem>
								<artifactItem>
									<groupId>nl.ipo.cds</groupId>
									<artifactId>theme-riskzone</artifactId>
									<type>zip</type>
									<classifier>sql</classifier>
								</artifactItem>
							</artifactItems>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>1.1</version>
				<executions>
					<execution>
						<id>generate-xml-config-report</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>java</goal>
						</goals>
						<configuration>
							<mainClass>nl.idgis.cds.assembly.XMLConfigReport</mainClass>
							<arguments>
								<argument>${project.build.directory}/dependency/nl/ipo/cds/etl/protectedSite/config</argument>
								<argument>${project.build.directory}/protected-site-config/report.xml</argument>
							</arguments>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<artifactId>maven-antrun-plugin</artifactId>
				<executions>
					<execution>
						<phase>prepare-package</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<tasks>
								<mkdir dir="${project.build.directory}/sql" />
								<concat destfile="${project.build.directory}/sql/create-database.sql">
									<header>begin;</header>
									<filelist dir="${project.build.directory}/dependency/sql" files="create-manager-schema.sql,cds-schema.sql,add-delete-cascade.sql,create-manager-geometry.sql,update-manager-timezones.sql,create-manager-indexes.sql,create-manager-views.sql,grant-manager-schema.sql,create-metadata-schema.sql,cds-metadata-schema.sql,grant-metadata-schema.sql,create-inspire-schema.sql,grant-inspire-schema.sql,create-job-scheduler.sql,populate-manager-schema.sql,create-bron-schema.sql" />
									<footer>commit;</footer>
								</concat>
								<concat destfile="${project.build.directory}/sql/add-themes.sql">
									<header>begin;</header>
									<path>
										<fileset dir="${project.build.directory}/dependency/sql" includes="create-bron-schema-*.sql" />
										<fileset dir="${project.build.directory}/dependency/sql" includes="create-inspire-schema-*.sql" />
										<fileset dir="${project.build.directory}/dependency/sql" includes="populate-manager-schema-*.sql" />
										<fileset dir="${project.build.directory}/dependency/sql" includes="populate-metadata-schema-*.sql" />
									</path>
									<footer>commit;</footer>
								</concat>
							</tasks>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>2.1</version>
					<configuration>
						<source>1.6</source>
						<target>1.6</target>
					</configuration>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-shade-plugin</artifactId>
					<version>2.0</version>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-release-plugin</artifactId>
					<version>2.4.1</version>
					<configuration>
						<goals>install</goals>
						<!-- no 'deploy' in order to be able to use release:perform without maven repository -->
						<autoVersionSubmodules>true</autoVersionSubmodules>
					</configuration>
				</plugin>

				<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.maven.plugins
										</groupId>
										<artifactId>
											maven-dependency-plugin
										</artifactId>
										<versionRange> [2.2,) </versionRange>
										<goals>
											<goal>copy-dependencies</goal>
											<goal>unpack</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
	<dependencies>
		<dependency>
			<groupId>nl.ipo.cds.ipo</groupId>
			<artifactId>ipo-job-executor-exec</artifactId>			
		</dependency>
		<dependency>
			<groupId>nl.ipo.cds</groupId>
			<artifactId>etl-proces</artifactId>
			<type>zip</type>
			<classifier>sql</classifier>
		</dependency>
		<dependency>
			<groupId>nl.ipo.cds</groupId>
			<artifactId>managerDB</artifactId>
			<type>zip</type>
			<classifier>sql</classifier>
		</dependency>
		<dependency>
			<groupId>nl.ipo.cds</groupId>
			<artifactId>metadataDB</artifactId>
			<type>zip</type>
			<classifier>sql</classifier>
		</dependency>
		<dependency>
			<groupId>nl.ipo.cds</groupId>
			<artifactId>resources</artifactId>
		</dependency>
		<dependency>
			<groupId>nl.ipo.cds</groupId>
			<artifactId>resources</artifactId>
			<classifier>tst</classifier>
		</dependency>
		<dependency>
			<groupId>nl.ipo.cds</groupId>
			<artifactId>resources</artifactId>
			<classifier>acc</classifier>
		</dependency>
		<dependency>
			<groupId>nl.ipo.cds</groupId>
			<artifactId>resources</artifactId>
			<classifier>prod</classifier>
		</dependency>
		<dependency>
			<groupId>nl.ipo.cds.ipo</groupId>
			<artifactId>ipo-admin</artifactId>
			<type>war</type>			
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>nl.ipo.cds</groupId>
			<artifactId>deegree-webservices-cds</artifactId>
			<type>war</type>
			<scope>compile</scope>
		</dependency>
	</dependencies>
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>nl.ipo.cds.ipo</groupId>
				<artifactId>ipo-admin</artifactId>				
				<version>${cds-ipo.version}</version>
				<type>war</type>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>nl.ipo.cds</groupId>
				<artifactId>cds-test</artifactId>
				<version>${cds.version}</version>
				<type>jar</type>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>nl.ipo.cds</groupId>
				<artifactId>commons</artifactId>
				<version>${cds.version}</version>
				<type>jar</type>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>nl.ipo.cds</groupId>
				<artifactId>deegree-extension</artifactId>
				<version>${cds.version}</version>
				<type>jar</type>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>nl.ipo.cds</groupId>
				<artifactId>domain</artifactId>
				<version>${cds.version}</version>
				<type>jar</type>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>nl.ipo.cds.ipo</groupId>
				<artifactId>ipo-job-executor-exec</artifactId>
				<version>${cds-ipo.version}</version>
				<type>jar</type>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>nl.ipo.cds</groupId>
				<artifactId>etl-proces</artifactId>
				<version>${cds.version}</version>
				<type>jar</type>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>nl.ipo.cds</groupId>
				<artifactId>etl-reporting</artifactId>
				<version>${cds.version}</version>
				<type>jar</type>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>nl.ipo.cds</groupId>
				<artifactId>managerDB</artifactId>
				<version>${cds.version}</version>
				<type>jar</type>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>nl.ipo.cds</groupId>
				<artifactId>resources</artifactId>
				<version>${cds.version}</version>
				<type>jar</type>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>nl.ipo.cds</groupId>
				<artifactId>deegree-webservices-cds</artifactId>
				<version>${cds.version}</version>
				<type>war</type>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>nl.ipo.cds</groupId>
				<artifactId>managerDB</artifactId>
				<version>${cds.version}</version>
				<type>zip</type>
				<classifier>sql</classifier>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>nl.ipo.cds</groupId>
				<artifactId>metadataDB</artifactId>
				<version>${cds.version}</version>
				<type>zip</type>
				<classifier>sql</classifier>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>nl.ipo.cds</groupId>
				<artifactId>resources</artifactId>
				<version>${cds.version}</version>
				<classifier>tst</classifier>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>nl.ipo.cds</groupId>
				<artifactId>resources</artifactId>
				<version>${cds.version}</version>
				<classifier>acc</classifier>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>nl.ipo.cds</groupId>
				<artifactId>resources</artifactId>
				<version>${cds.version}</version>
				<classifier>prod</classifier>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>nl.ipo.cds.ipo</groupId>
				<artifactId>ipo-job-executor-exec</artifactId>
				<version>${cds-ipo.version}</version>
				<type>jar</type>
				<classifier>manager</classifier>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>nl.ipo.cds</groupId>
				<artifactId>etl-proces</artifactId>
				<version>${cds.version}</version>
				<type>jar</type>
				<classifier>manager</classifier>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>nl.ipo.cds</groupId>
				<artifactId>etl-proces</artifactId>
				<version>${cds.version}</version>
				<type>zip</type>
				<classifier>sql</classifier>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>nl.ipo.cds</groupId>
				<artifactId>resources</artifactId>
				<version>${cds.version}</version>
				<type>jar</type>
				<classifier>tests</classifier>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>nl.ipo.cds</groupId>
				<artifactId>metadataDB</artifactId>
				<version>${cds.version}</version>
				<type>jar</type>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>nl.ipo.cds</groupId>
				<artifactId>theme-areamanagement</artifactId>
				<version>${cds.version}</version>
				<type>jar</type>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>nl.ipo.cds.ipo</groupId>
				<artifactId>theme-buisleidingen</artifactId>
				<version>${cds.version}</version>
				<type>jar</type>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>nl.ipo.cds.ipo</groupId>
				<artifactId>theme-bvb</artifactId>
				<version>${cds.version}</version>
				<type>jar</type>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>nl.ipo.cds</groupId>
				<artifactId>theme-exposedelements</artifactId>
				<version>${cds.version}</version>
				<type>jar</type>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>nl.ipo.cds</groupId>
				<artifactId>theme-habitat</artifactId>
				<version>${cds.version}</version>
				<type>jar</type>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>nl.ipo.cds</groupId>
				<artifactId>theme-hazardarea</artifactId>
				<version>${cds.version}</version>
				<type>jar</type>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>nl.ipo.cds.ipo</groupId>
				<artifactId>theme-monster</artifactId>
				<version>${cds.version}</version>
				<type>jar</type>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>nl.ipo.cds.ipo</groupId>
				<artifactId>theme-monsterpunt</artifactId>
				<version>${cds.version}</version>
				<type>jar</type>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>nl.ipo.cds</groupId>
				<artifactId>theme-productionfacility</artifactId>
				<version>${cds.version}</version>
				<type>jar</type>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>nl.ipo.cds</groupId>
				<artifactId>theme-productioninstallation</artifactId>
				<version>${cds.version}</version>
				<type>jar</type>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>nl.ipo.cds</groupId>
				<artifactId>theme-productioninstallationpart</artifactId>
				<version>${cds.version}</version>
				<type>jar</type>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>nl.ipo.cds</groupId>
				<artifactId>theme-protectedsites</artifactId>
				<version>${cds.version}</version>
				<type>jar</type>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>nl.ipo.cds.ipo</groupId>
				<artifactId>theme-resultaat</artifactId>
				<version>${cds.version}</version>
				<type>jar</type>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>nl.ipo.cds.ipo</groupId>
				<artifactId>theme-riscisor</artifactId>
				<version>${cds.version}</version>
				<type>jar</type>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>nl.ipo.cds</groupId>
				<artifactId>theme-riskzone</artifactId>
				<version>${cds.version}</version>
				<type>jar</type>
				<scope>compile</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

</project>
